Протасов Леонид
ФИТ-2-2016 НБ, IV курс
Лабораторная работа №1 "Создание клиентского приложения по выполнению CRUD операций на популярном информационном ресурсе"
Разработанное приложение выполняет операции по созданию, просмотру, редактированию и удалению объектов
на информационном ресурсе "ВКонтакте" (http://vk.com)
Процесс аутентификации заключается в следующем:
1) Пользователь авторизовывается при помощи логина и пароля от информационного ресурса "ВКонтакте"
2) API сайта позволяет создавать приложения. Приложение имеет уникальный идентификатор, при помощи которого авторизовавшийся
пользователь может получить token. Токен предназначается для того, чтобы пользователю при помощи приложения был доступен
некий функционал, определяемый разработчиком приложения.
3) Получив токен, пользователь получает возможность напрямую работать с API в соответствиис полученными привилегиями. В нашем случае
приложение запрашивает доступ к "стене" пользователя, и получает возможность писать на "стенах" других пользователей и групп.
4) При помощи токена осуществляются все CRUD операции, которые было необходимо реализовать.
5) Далее необходимо лишь знать идентификатор стены (в нашем случае будем пользоваться идентификатором  стены новой группы, созданной для 
того, чтобы протестировать приложение), на которой мы будем размещать наши объекты - заметки.
6) Для того, чтобы удостовериться, может ли авторизовавшийся пользователь редактировать или удалять ту или иную запись, будем сверять
идентификатор пользователя, написавшего заметку, с идентификатором авторизовавшегося в нашем приложении пользователя.

1-4)Приложение полностью удовлетворяет первым четырем треованиям, а именно: позволяет создавать, редактировать, удалять и просматривать текстовые
записи на стене сообщества ВКонтакте.
	Алгоритм проверки требований 1-4:
	1.1) Выполняем авторизацию в приложении при помощи учетных данных инф. ресурса "ВКонтакте"
	1.2) Создаем новую запись на стене при помощи приложения
	1.3) Для проверки внесенных изменений откроем страницу, на которой расположена "стена", в web-браузере (https://vk.com/club186834007)
	1.4) Если созданная запись появилась на стене в web-браузере, то будем считать, что требование 1 выполнено (программа позволяет создавать новые объекты)

	1.5) Редактируем созданную запись на стене при помощи приложения
	1.6) Для проверки внесенных изменений откроем страницу, на которой расположена "стена", в web-браузере.
	1.7) Если изменения, внесенные в приложении, отобразились на стене в web-браузере, то будем считать, что требование 2 выполнено 
	(программа позволяет редактировать сущетвующие объекты), также как и требование 5 
	(Приложение позволяет выполнять по крайней мере две CRUD операции для одного и того же объекта выбранного ресурса)

	1.8) Удаляем отредактированную запись со стены при помощи приложения
	1.9) Для проверки откроем страницу, на которой расположена "стена", в web-браузере (https://vk.com/club186834007)
	1.10) Если созданная запись пропала со стены в web-браузере, то будем считать, что требование 3 выполнено (программа позволяет удалять объекты)

	1.11) Создаем новую запись на стене при помощи web браузера.
	1.12) Для проверки обновим содержимое стены при помощи кнопки "Обновить"
	1.13) Если созданная при помощи web-браузера запись появилась в приложении, то будем считать, что требование 4 выполнено 
	(программа позволяет считывать объекты)
5)Приложение удовлетворяет пятому требованию, поскольку после создания объекта обновляется список объектов, что позволяет выполнять другие операции
над ним.
	Алгоритм проверки: см. пункты 1.1-1.7
6)Приложение удовлетворяет шестому требованию, поскольку ни одна из операции не может быть выполнена без аутентификации.
	Алгоритм проверки требования 6:
	6.1) Попытаемся создать запись в приложении. 
	6.2) Если пользовательский интерфейс приложения не позволяет создавать, редактировать, просматривать или удалять записи до авторизации, 
	то будем считать что программа удовлетворяет требованию 6.
7)Приложение удовлетворяет седьмому требованию. Чтобы это подтвердить, авторизуемся в системе, и затем выйдем из неё. После повторного запуска приложения
авторизация сохранится, и весь функционал будет доступен пользователю.
	Алгоритм проверки требования 7:
	7.1) Запустим приложение
	7.2) Авторизуемся в нем.
	7.3) Выйдем из приложения, затем запустим его снова без повторной авторизации.
	7.4) Если пользователь по прежнему авторизован и ему доступен весь функционал, то будем считать, что программа удовлетворяет требованию 7.
8)Приложение удовлетворяет восьмому требованию. Чтобы это подтвердить, откроем файл, в котором хранится токен, и попытаемся при помощи него авторизоваться
в другом приложении. Однако содержимое файла не подходит в качестве токена, поскольку зашифровано при помощи стандартного алгоритма шифрации microsoft.
	Алгоритм проверки требования 8:
	8.1) Запустим приложение
	8.2) Авторизуемся в нем.
	8.3) Выйдем из приложения, токен при этом сохраняется в файле "%appdata%/VKTest/token".
	8.4) Попытаемся воспользоваться содержимым файла в качестве токена для выполнения действий при помощи API инф. ресурса "ВКонтакте".
	8.5) Если API выдаст сообщение об ошибке авторизации, то будем считать, что требование 8 выполнено.
	